<head>
    <link rel="stylesheet" type="text/css" href="~/lib/bootstrap.min.css"></link>
    <link rel="stylesheet" type="text/css" href="~/css/app.css"></link>
    <link rel="stylesheet" type="text/css" href="~/css/mainScreen.css"></link>
    <link rel="stylesheet" type="text/css" href="~/css/animation.css"></link>
    <link rel="stylesheet" type="text/css" href="~/css/socialPanel.css"></link>
    <script src="~/lib/jquery.min.js"></script>
    <script src="~/lib/bootstrap.min.js"></script>
    <script src="~/lib/signalr-client-1.0.0-alpha2-final.min.js"></script>
    <script src="~/lib/knockout-3.4.2.js"></script>
    <script src="~/js/models/ChatMessage.js"></script>
    <script src="~/js/models/User.js"></script>
    <script src="~/js/models/GameLobby.js"></script>
    <script src="~/js/viewmodels/GameCardViewModel.js"></script>
    <script src="~/js/viewmodels/ChatRoomViewModel.js"></script>
    <script src="~/js/viewmodels/ChatRoomsViewModel.js"></script>
    <script src="~/js/viewmodels/GameLobbyViewModel.js"></script>
    <script src="~/js/viewmodels/GameLobbiesViewModel.js"></script>
    <script src="~/js/viewmodels/LoginViewModel.js"></script>
    <script src="~/js/viewmodels/RegisterViewModel.js"></script>
</head>
<body>
    <div class="container-fluid" id="loginScreen">
        <div class="gap1"></div>
        <div class="row" id="titleRow">
            <div class="col-xs-3 col-sm-2 col-sm-offset-2 col-md-1 col-md-offset-1">
               <div class="card" id="title1">
                    <div class="cardFront">C</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-sm-2 col-md-1">
               <div class="card" id="title2">
                    <div class="cardFront">A</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-sm-2 col-md-1">
               <div class="card" id="title3">
                    <div class="cardFront">L</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-sm-2 col-md-1">
               <div class="card" id="title4">
                    <div class="cardFront">L</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>

            <div class="col-xs-2 col-xs-offset-1 col-md-1 col-md-offset-1">
               <div class="card" id="title5">
                    <div class="cardFront">C</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
            <div class="col-xs-2 col-md-1">
               <div class="card" id="title6">
                    <div class="cardFront">H</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
            <div class="col-xs-2 col-md-1">
               <div class="card" id="title7">
                    <div class="cardFront">E</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
            <div class="col-xs-2 col-md-1">
               <div class="card" id="title8">
                    <div class="cardFront">A</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
            <div class="col-xs-2 col-md-1">
               <div class="card" id="title9">
                    <div class="cardFront">T</div>
                    <div class="cardBack">
                    </div>
                </div>
            </div>
        </div>

        <div class="gap1"></div>

        <div class="row" id="loginRegisterRow">
            <div class="col-xs-8 col-xs-offset-2 col-sm-4 col-sm-offset-1 col-md-3 col-md-offset-2">
                <div class="card loading" id="loginForm">
                    <div class="cardBack"></div>
                    <div class="cardFront">
                        <div class="subTitle">LOGIN</div>
                        <div class="gap1"></div>
                        <div class="item">
                            <div>Username</div><input data-bind="value: username"></input>
                        </div>
                        <div class="item">
                            <div>Password</div><input type="password" data-bind="value: password"></input>
                        </div>
                        <div class="item2">
                            <div class="button1" data-bind="click: login">Login</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-8 col-xs-offset-2 col-sm-4 col-sm-offset-2 col-md-3 col-md-offset-2">
                <div class="card loading" id="registrationForm">
                    <div class="cardFront">
                        <div class="subTitle">REGISTER</div>
                        <div class="gap1"></div>
                        <div class="item">
                            <div>Username</div><input data-bind="value: username"></input>
                        </div>
                        <div class="item">
                            <div>Email</div><input data-bind="value: email"></input>
                        </div>
                        <div class="item">
                            <div>Password</div><input type="password" data-bind="value: password"></input>
                        </div>
                        <div class="item2">
                            <div class="button1" data-bind="click: register">Register</div>
                        </div>
                    </div>
                    <div class="cardBack"></div>
                </div>
            </div>
        </div>
    </div>

    <div id="mainScreen">
        <div id="socialPanel">
            <div class="card">
                <div class="cardBack"></div>
                <div class="cardFront">
                    <div id="socialLobby">
                        <div class="item3">
                            <div class="subTitle">SOCIAL</div>
                        </div>
                        <div class="item">
                            <div id="chatRoomsPanel" class="item2" data-bind="foreach: chatRooms">
                                <div class="item" data-bind="click: joinChatRoom">
                                    <div data-bind="text: chatRoomName"></div>
                                    <div data-bind="text: users.length"></div>
                                </div>
                            </div>
                            <div id="onlinePlayersPanel" class="item2"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="gamePanel">
            <div class="card">
                <div class="cardBack"></div>
                <div class="cardFront">
                    <div id="gameLobbies">
                        <div class="item">
                            <div class="subTitle">GAME LOBBIES</div>
                            <div data-bind="click: getGameLobbies" class="button1">REFRESH</div>
                            <div onclick="createNewGameClick()" class="button1">NEW GAME</div>
                        </div>
                        <div id="gameLobbiesPanel" data-bind="foreach: gameLobbies">
                            <div class="item" data-bind="click: joinGameLobby">
                                <div data-bind="text: gameLobbyName"></div>
                                <div data-bind="text: userCountLimitFraction"></div>
                                <div data-bind="text: hostInfo"></div>
                            </div>
                        </div>
                    </div>
                    <div id="currentGameLobby">
                        <div class="item">
                            <div class="subTitle">GAME LOBBY</div>
                            <div class="subTitle" data-bind="text: gameLobbyName"></div>
                            <div class="subTitle" data-bind="text: userCountLimitFraction"></div>
                        </div>
                        <div class="item3">
                            <div id="gameLobbyMessagesPanel">
                                <div data-bind="foreach: gameLobbyMessages">
                                    <div data-bind="text: messageContent"></div>
                                </div>
                            </div>
                            <div id="playersPanel">
                                <div data-bind="foreach: players">
                                    <div data-bind="text: userName"></div>
                                </div>
                            </div>
                        </div>
                        <div class="item2">
                            <div class="button1" data-bind="click: startGame">Start Game</div>
                            <div class="button1" data-bind="click: leaveGameLobby">Leave Game</div>
                            <input data-bind="value: gameLobbyMessage"/>
                            <div class="button1" data-bind="click: sendMessageGameLobby">Send</div>                                             
                        </div>
                    </div>
                    <div id="createGameLobby">
                        <div class="item">
                            <div class="subTitle">CREATE NEW GAME</div>
                        </div>
                        <div class="panel">
                            <div class="gap1"></div>
                            <div class="item2">
                                <div class="itemLabel">Game Lobby Name</div>
                                <input data-bind="value: gameLobbyName" maxlength="10" />
                            </div>
                            <div class="item2">
                                <div class="itemLabel">Number Of Players</div>
                                <select data-bind="options: maxRoomLimitOptions, value: maxRoomLimit"></select>
                            </div>
                        </div>
                        <div class="item3">
                            <div class="button1" data-bind="click: createGameLobby">Create</div>
                            <div class="button1">Back</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="chatsNavbar" data-bind="foreach: chatRooms">
            <div class="item">
                <div></div>
                <div class="itemLabel" data-bind="text: chatRoomName"></div>
            </div>
        </div>
    </div>

    <div id="chatRooms">
                            <button data-bind="click: getChatRooms">Refresh Chat Rooms</button>
                            <div data-bind="foreach: chatRooms">
                                <div data-bind="text: chatRoomName"></div>

                                <div data-bind="foreach: chatMessages">
                                    <div data-bind="text: userName"></div>
                                    <div data-bind="text: userID"></div>
                                    <div data-bind="text: messageContent"></div>
                                    <div data-bind="text: whenCreated"></div>
                                </div>

                                <div data-bind="foreach: users">
                                    <div data-bind="text: userName"></div>
                                </div>

                                <input data-bind="value: chatMessageInput"></input>
                                <button data-bind="click: joinChatRoom">Join Chat Room</button>
                                <button data-bind="click: sendMessage">Send Message</button>
                            </div>
                        </div>

    <div id="currentGameLobby">
        <div data-bind="text: gameLobbyName"></div>
        <div data-bind="text: host.userName"></div>
        <div data-bind="text: gameLobbyID"></div>

        <div data-bind="foreach: players">
            <div data-bind="text: userName"></div>
        </div>
        <div data-bind="foreach: gameLobbyMessages">
            <div data-bind="text: messageContent"></div>
        </div>

        <input data-bind="value: gameLobbyMessage"></input>
        <button data-bind="click: startGame">Start Game</button>
        <button data-bind="click: leaveGameLobby">Leave Game Lobby</button>
        <button data-bind="click: sendMessageGameLobby">Send Message</button>

        <div style="{height: 100px}"></div>
        
        <div data-bind="foreach: hand">
            <div data-bind="text: rank"></div>
            <div data-bind="text: suit"></div>
            <input type="checkbox" data-bind="checked: selected"/>
        </div>
        <input data-bind="value: rankClaim"/>
        <button data-bind="click: gameCallCheat">Call Cheat</button>
        <button data-bind="click: gameClaim">Game Claim</button>
        <button data-bind="click: gameEndTurn">End Turn</button>
    </div>

    <div id="gameLobby">
        <input data-bind="value: gameLobbyName"></input>
        <input data-bind="value: maxRoomLimit"></input>
        <button data-bind="click: createGameLobby">Create Game Lobby</button>
    </div>

    <button>Test</button>

</body>

<script>
    var loggedInUser = null;

    var chatHub = new signalR.HttpConnection(`http://localhost:50249/chat`);
    var gameLobbyHub = new signalR.HttpConnection(`http://localhost:50249/gamelobby`);
    
    var chatConnection = new signalR.HubConnection(chatHub);
    var gameLobbyConnection = new signalR.HubConnection(gameLobbyHub);

    var loginViewModel = new LoginViewModel();
    var chatRoomsViewModel = new ChatRoomsViewModel(chatConnection);
    var currentChatRoomsViewModel = new ChatRoomsViewModel(chatConnection);
    var gameLobbiesViewModel = new GameLobbiesViewModel(gameLobbyConnection);
    var currentGameLobby = new GameLobbyViewModel(gameLobbyConnection, null);
    var createGameLobby = new GameLobbyViewModel(gameLobbyConnection, null); 

    ko.applyBindings(new RegisterViewModel(), document.getElementById("registrationForm"));
    ko.applyBindings(loginViewModel, document.getElementById("loginForm"));
    ko.applyBindings(chatRoomsViewModel, document.getElementById("socialLobby"));
    ko.applyBindings(currentChatRoomsViewModel, document.getElementById("chatsNavbar"));
    ko.applyBindings(gameLobbiesViewModel, document.getElementById("gameLobbies"));
    ko.applyBindings(createGameLobby, document.getElementById("createGameLobby"));
    ko.applyBindings(currentGameLobby, document.getElementById("currentGameLobby"));

    function setConnections() {
        setChatConnections(chatConnection);
        setGameLobbyConnections(gameLobbyConnection);
    }

    function setChatConnections(connection) {
        connection.on('ChatSendMessage', function(chatMessage, isSender, chatRoomName) {
            console.log(chatMessage + isSender + chatRoomName);
            var chatRoom = chatRoomsViewModel.chatRooms().find(function(element) {
                return element.chatRoomName() == chatRoomName;
            });
            chatRoom.chatMessages.push(new ChatMessage(chatMessage));
        });

        connection.on('ChatUserDisconnected', function(disconnectedUser, chatRoomName) {
            console.log(disconnectedUser.UserName + " has disconnected "  + chatRoomName);

            var chatRoom = chatRoomsViewModel.chatRooms().find(function(element) {
                return element.chatRoomName() == chatRoomName;
            });

            for(var i = 0; i < chatRoom.users().length; i++) {
                var user = chatRoom.users()[i];
                console.log(user.userName);
                if(user.userName == disconnectedUser.UserName) {
                    chatRoom.users.remove(user);
                }
            }
        });
        connection.on('ChatRoomJoin', function(newUser, users, isNewChatUser, chatRoomName) {
            console.log(newUser.UserName + " has entered chatroom " + chatRoomName);

            var chatRoom = chatRoomsViewModel.chatRooms().find(function(element) {
                return element.chatRoomName() == chatRoomName;
            });

            if(isNewChatUser) {
                for(var i = 0; i < users.length; i++) {
                    console.log(users[i])
                    chatRoom.users.push(new User(users[i]));
                    currentChatRoomsViewModel.chatRooms.push(chatRoom);
                    console.log(currentChatRoomsViewModel.chatRooms().length);
                }
            }
            else {
                chatRoom.users.push(new User(newUser));
            }
        });

        connection.start();
    }

    function setGameLobbyConnections(connection) {
        connection.on('GameLobbyJoin', function(success, host, players, newUser, isNewUser, gameLobbyID, gameLobbyName, gameLobbyMaxRoomLimit) {
            console.log(success + " " + host + " " + players + " " + newUser + " " + isNewUser + gameLobbyID);
            if(success) {
                console.log("new user joined game lobby: " + newUser);
                console.log(newUser.userName);
                currentGameLobby.gameLobbyName(gameLobbyName);
                currentGameLobby.host(host);
                currentGameLobby.players(players);
                currentGameLobby.gameLobbyID(gameLobbyID);
                currentGameLobby.maxRoomLimit(gameLobbyMaxRoomLimit);
                currentGameLobby.userCount(players.length);
                joinGameLobby();
            }
        });
        
        connection.on('GameLobbySendMessage', function(chatMessage, isSender) {
            console.log("herrrrrrrrrrre");
            var message = new ChatMessage(chatMessage);
            currentGameLobby.gameLobbyMessages.push(message);
        });

        connection.on('GameLobbyStartGame', function(turn) {
            console.log(turn);
            currentGameLobby.gameState();
        });

        connection.on('GameLobbyLeave', function(success, playerLeaving, host, players) {
            console.log("logging.." + playerLeaving.userName);
            if(success) {
                currentGameLobby.hostUserName(host.userName);
                currentGameLobby.gameLobbyMessages.push({"messageContent": playerLeaving.userName + " has left the game"});
                currentGameLobby.players.removeAll();
                currentGameLobby.players(players);

                if(loginViewModel.username()==playerLeaving.userName) {
                    leaveGameLobbyClick();
                }
            }
        });

        connection.on('GameState', function(gameState) {
            console.log(gameState);
            currentGameLobby.hand.removeAll();
            for(var i = 0; i < gameState.Hand.length; i++) {
                currentGameLobby.hand.push(new GameCardViewModel(gameState.Hand[i]));
            }
        });

        connection.on('GameClaim', function(gameState) {
            console.log(gameState);
            currentGameLobby.hand.removeAll();
            for(var i = 0; i < gameState.Hand.length; i++) {
                currentGameLobby.hand.push(new GameCardViewModel(gameState.Hand[i]));
            }
        });

        connection.on('GameEndTurn', function(gameState) {
            console.log(gameState);
            currentGameLobby.hand.removeAll();
            for(var i = 0; i < gameState.Hand.length; i++) {
                currentGameLobby.hand.push(new GameCardViewModel(gameState.Hand[i]));
            }
        });

        connection.on('GameCallCheat', function(gameState, cheatCallerUserName, lastClaimUserName, preCheatClaims, cheatCallSuccess) {
            console.log(gameState);
            console.log(cheatCallerUserName);
            console.log(lastClaimUserName);
            console.log(preCheatClaims);
            console.log(cheatCallSuccess);
            currentGameLobby.hand.removeAll();
            for(var i = 0; i < gameState.Hand.length; i++) {
                currentGameLobby.hand.push(new GameCardViewModel(gameState.Hand[i]));
            }
        });

        connection.start();
    }

    function loginSuccessful() {
        setConnections();
        var loginScreen = document.getElementById("loginScreen");
        loginScreen.style.display = "none";
        var mainScreen = document.getElementById("mainScreen");
        mainScreen.style.display = "inline";
        document.body.scrollTop = document.documentElement.scrollTop = 0;

        gameLobbiesViewModel.getGameLobbies();
        chatRoomsViewModel.getChatRooms();

        checkPanelsVisible();
    }

    function checkPanelsVisible() {
        var panels = [];
        panels.push(document.getElementById("gamePanel"));
        panels.push(document.getElementById("socialPanel"));

        for(var i = 0; i < panels.length; i++) {
            var panel = panels[i];

            var x = panel.offsetLeft, y = panel.offsetTop, w = panel.offsetWidth, h = panel.offsetHeight, r = x + w, //right
                b = y + h, //bottom
                visibleX, visibleY, visible;

                visibleX = Math.max(0, Math.min(w, window.pageXOffset + window.innerWidth - x, r - window.pageXOffset));
                visibleY = Math.max(0, Math.min(h, window.pageYOffset + window.innerHeight - y, b - window.pageYOffset));

                visible = visibleX * visibleY / (w * h);

                if (visible > 0.2) {
                    var cardElements = panel.getElementsByClassName("card");
                    for (var i = 0; i < cardElements.length; i++) {
                        cardElements[i].classList.add("activate");
                    }
                }
            }
    }

    function refreshGamePanelCards() {
        var ele = document.getElementById("gamePanel");
        var cardElements = ele.getElementsByClassName("card");
        for (var i = 0; i < cardElements.length; i++) {
            cardElements[i].classList.remove("activate");
            void cardElements[i].offsetWidth;
            cardElements[i].classList.add("activate");
        }
    }

    function socialButtonClick() {
        refreshGamePanelCards();
        var ele = document.getElementById("gameLobbies");
        ele.style.display = "none";
        ele = document.getElementById("currentGameLobby");
        ele.style.display = "none";
        ele = document.getElementById("createGameLobby");
        ele.style.display = "none";
    }

    function gameLobbiesButtonClick() {
        refreshGamePanelCards();
        if(currentGameLobby.gameLobbyName() == null) {
            gameLobbiesViewModel.getGameLobbies();
            var ele = document.getElementById("gameLobbies");
            ele.style.display = "inline";
            ele = document.getElementById("currentGameLobby");
            ele.style.display = "none";
            ele = document.getElementById("createGameLobby");
            ele.style.display = "none";
        }
        else {
            var ele = document.getElementById("currentGameLobby");
            ele.style.display = "inline";
            ele = document.getElementById("gameLobbies");
            ele.style.display = "none";
            ele = document.getElementById("createGameLobby");
            ele.style.display = "none";
        }
    }

    function joinGameLobby() {
        refreshGamePanelCards();
        var ele = document.getElementById("gameLobbies");
        ele.style.display = "none";
        ele = document.getElementById("currentGameLobby");
        ele.style.display = "inline";
        ele = document.getElementById("createGameLobby");
        ele.style.display = "none";
    }

    function createNewGameClick() {
        refreshGamePanelCards();
        var ele = document.getElementById("gameLobbies");
        ele.style.display = "none";
        ele = document.getElementById("createGameLobby");
        ele.style.display = "inline";
    }

    function leaveGameLobbyClick() {
        refreshGamePanelCards();
        currentGameLobby.gameLobbyName(null);
        currentGameLobby.gameLobbyID(null);
        currentGameLobby.gameLobbyMessages.removeAll();
        gameLobbiesViewModel.getGameLobbies();
        var ele = document.getElementById("gameLobbies");
        ele.style.display = "inline";
        ele = document.getElementById("currentGameLobby");
        ele.style.display = "none";
    }

    window.onload = function() {
        var ele1 = document.getElementById("loginForm");
        ele1.classList.remove("loading");
        ele1.classList.add("activate");

        ele1 = document.getElementById("registrationForm");
        ele1.classList.remove("loading");
        ele1.classList.add("activate");
    }


    window.addEventListener('scroll', checkPanelsVisible, false);
    window.addEventListener('resize', checkPanelsVisible, false);
</script>